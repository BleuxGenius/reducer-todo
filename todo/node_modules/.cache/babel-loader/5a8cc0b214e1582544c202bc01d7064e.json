{"ast":null,"code":"import _slicedToArray from \"/Users/lambda_school_loaner_167/Desktop/GitWeb/reducer-todo/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lambda_school_loaner_167/Desktop/GitWeb/reducer-todo/todo/src/components/Todo.js\";\nimport React, { useState, useReducer } from 'react';\nimport { initialState, todoReducer } from '../reducers/todoReducer';\n\nconst Todo = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        newTodo = _useState2[1];\n\n  const _useReducer = useReducer(todoReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const handleChange = event => {\n    newTodo(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (todo !== '') {\n      dispatch({\n        type: 'NEW_TODO',\n        payload: todo\n      });\n      newTodo('');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \" Clear Your Todos!\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Click \\\"Status\\\" to Toggle Your Todo\"), state.todos.map(todo => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Todo: \", todo.item), React.createElement(\"p\", {\n    key: todo.id,\n    onClick: () => dispatch({\n      type: ' TOGGLE_TODO',\n      payload: todo\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Status: Todo: \", todo.completed ? 'Completed' : 'Incomplete'))), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"todo\",\n    value: todo,\n    onChange: handleChange,\n    placeholder: \"Add a todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Add Todo\")), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'REMOVE_TODO',\n      payload: todo\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Clear Todos\"));\n};\n\nexport default Todo; // MP","map":{"version":3,"sources":["/Users/lambda_school_loaner_167/Desktop/GitWeb/reducer-todo/todo/src/components/Todo.js"],"names":["React","useState","useReducer","initialState","todoReducer","Todo","todo","newTodo","state","dispatch","handleChange","event","target","value","handleSubmit","preventDefault","type","payload","todos","map","item","id","completed"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,yBAAxC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACSJ,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,QACRK,IADQ;AAAA,QACFC,OADE;;AAAA,sBAEWL,UAAU,CAACE,WAAD,EAAcD,YAAd,CAFrB;AAAA;AAAA,QAERK,KAFQ;AAAA,QAEDC,QAFC;;AAIf,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGH,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAIT,IAAI,KAAK,EAAb,EAAgB;AACZG,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEX;AAA7B,OAAD,CAAR;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAND;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAGSC,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgBb,IAAI,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,IAAI,CAACc,IAAf,CADJ,EAEI;AAAG,IAAA,GAAG,EAAEd,IAAI,CAACe,EAAb;AACA,IAAA,OAAO,EAAE,MAAMZ,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEX;AAAjC,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEmBA,IAAI,CAACgB,SAAL,GAAiB,WAAjB,GAA+B,YAFlD,CAFJ,CADH,CAHT,EAYQ;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,KAAK,EAAER,IAHP;AAIA,IAAA,QAAQ,EAAEI,YAJV;AAKA,IAAA,WAAW,EAAC,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,CAZR,EA0BQ;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEX;AAAhC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1BR,CADJ;AA+BH,CA9CD;;AAgDA,eAAeD,IAAf,C,CAEA","sourcesContent":["import React, {useState, useReducer} from 'react'\nimport {initialState, todoReducer} from '../reducers/todoReducer'\n\nconst Todo = () => {\n    const [todo, newTodo] = useState('');\n    const [state, dispatch] = useReducer(todoReducer, initialState)\n\n    const handleChange = event => {\n        newTodo(event.target.value);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (todo !== ''){\n            dispatch({ type: 'NEW_TODO', payload: todo}); \n            newTodo('');\n        }\n    };\n    return(\n        <div className=\"todo-container\">\n            <h1> Clear Your Todos!</h1>\n            <h1>Click \"Status\" to Toggle Your Todo</h1>\n                {state.todos.map(todo => (\n                    <div>\n                        <p>Todo: {todo.item}</p>\n                        <p key={todo.id}\n                        onClick={() => dispatch({ type: ' TOGGLE_TODO', payload: todo})}>\n                            Status: Todo: {todo.completed ? 'Completed' : 'Incomplete'}\n                        </p>\n                    </div>\n                ))}\n                <form onSubmit={handleSubmit}>\n                    <input\n                    type='text'\n                    name='todo'\n                    value={todo}\n                    onChange={handleChange}\n                    placeholder=\"Add a todo\"\n                    />\n\n                    <button>\n                        Add Todo\n                    </button>\n            \n                </form>\n                <button onClick={() => dispatch({ type: 'REMOVE_TODO', payload: todo})}>Clear Todos</button>\n          \n        </div>\n    )\n}\n\nexport default Todo; \n\n// MP"]},"metadata":{},"sourceType":"module"}